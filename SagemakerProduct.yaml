{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Template to create a SageMaker notebook ",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "SageMaker Notebook"
				},
				"Parameters": [
					"NotebookInstanceName",
					"NotebookInstanceType",
					"DirectInternetAccess",
					"ProjectName",
					"SageMakerS3Bucket",
					"KMSKeyId",
					"LifecycleConfigName",
					"Tags",
					"ProjectID",
					"UserName",
					"RootAccess",
					"VolumeSizeInGB",
					"EFSForSageMaker"
				]
			}],
			"ParameterLabels": {
				"DirectInternetAccess": {
					"default": "Default Internet Access"
				},
				"KMSKeyId": {
					"default": "KMS Key Id *"
				},
				"LifecycleConfigName": {
					"default": "Lifecycle Config Name"
				},
				"NotebookInstanceName": {
					"default": "Notebook Instance Name"
				},
				"NotebookInstanceType": {
					"default": "Notebook Instance Type"
				},
				"SageMakerS3Bucket": {
					"default": "SageMaker S3 Bucket"
				},
				"ProjectName": {
					"default": "Project Name"
				},
				"RootAccess": {
					"default": "Root access"
				},
				"VolumeSizeInGB": {
					"default": "Volume size for the SageMaker Notebook"
				},
				"ProjectID": {
					"default": "SageMaker ProjectID"
				},
				"UserName": {
					"default": "SageMaker UserName"
				},
				"EFSForSageMaker": {
					"default": "EFSForSageMaker"
				}
			}
		}
	},
	"Parameters": {
		"NotebookInstanceName": {
			"AllowedPattern": "[A-Za-z0-9-]{1,63}",
			"ConstraintDescription": "Maximum of 63 alphanumeric characters. Can include hyphens (-), but not spaces. Must be unique within your account in an AWS Region.",
			"Description": "SageMaker Notebook instance name",
			"MaxLength": "63",
			"MinLength": "1",
			"Type": "String"
		},
		"NotebookInstanceType": {
			"AllowedValues": [
				"ml.t2.medium",
				"ml.m4.xlarge",
				"ml.p2.xlarge"
			],
			"ConstraintDescription": "Must select a valid notebook instance type.",
			"Default": "ml.t2.medium",
			"Description": "Select Instance type for the SageMaker Notebook",
			"Type": "String"
		},
		"SageMakerS3Bucket": {
			"Description": "Name for the SageMaker bucket that will be granted restricted access(Name should be unique)",
			"Type": "String",
			"Default": "sagemaker-new"
		},
		"ProjectName": {
			"Description": "Name for the VPC. Enter a valid VPC Name",
			"Type": "String"
		},
		"RootAccess": {
			"Description": "Root access for the SageMaker Notebook user",
			"AllowedValues": ["Enabled", "Disabled"],
			"Default": "Enabled",
			"Type": "String"
		},
		"VolumeSizeInGB": {
			"Description": "The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.",
			"Type": "Number",
			"Default": "5"
		},
		"KMSKeyId": {
			"Description": "AWS KMS key ID used to encrypt data at rest on the ML storage volume attached to notebook instance.",
			"Type": "String"
		},
		"DirectInternetAccess": {
			"Description": "If you set this to Disabled this notebook instance will be able to access resources only in your VPC. As per the Project requirement, we have Disabled it.",
			"Type": "String",
			"Default": "Disabled",
			"AllowedValues": ["Disabled"],
			"ConstraintDescription": "Must select a valid notebook instance type."
		},
		"ProjectID": {
			"Type": "String",
			"Description": "Enter a valid ProjectID.",
			"Default": "Brillio007"
		},
		"UserName": {
			"Type": "String",
			"Description": "Enter a valid UserName."
		},
		"EFSForSageMaker": {
			"Description": "If EFS is needed,kindly enter YES",
			"Default": "YES",
			"AllowedValues": ["YES", "NO"],
			"Type": "String"
		}
	},
	"Conditions": {
		"EFSCondition": {
			"Fn::Equals": [
				"YES",
				{
					"Ref": "EFSForSageMaker"
				}
			]
		}
	},
	"Resources": {
		"SageMakerExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": [
								"sagemaker.amazonaws.com"
							]
						},
						"Action": [
							"sts:AssumeRole"
						]
					}]
				},
				"Path": "/",
				"Policies": [{
					"PolicyName": "SageMakerExecutionPolicy",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
								"Effect": "Allow",
								"Action": [
									"application-autoscaling:DeleteScalingPolicy",
									"application-autoscaling:DeleteScheduledAction",
									"application-autoscaling:DeregisterScalableTarget",
									"application-autoscaling:DescribeScalableTargets",
									"application-autoscaling:DescribeScalingActivities",
									"application-autoscaling:DescribeScalingPolicies",
									"application-autoscaling:DescribeScheduledActions",
									"application-autoscaling:PutScalingPolicy",
									"application-autoscaling:PutScheduledAction",
									"application-autoscaling:RegisterScalableTarget",
									"aws-marketplace:ViewSubscriptions",
									"cloudwatch:DeleteAlarms",
									"cloudwatch:DescribeAlarms",
									"cloudwatch:GetMetricData",
									"cloudwatch:GetMetricStatistics",
									"cloudwatch:ListMetrics",
									"cloudwatch:PutMetricAlarm",
									"cloudwatch:PutMetricData",
									"ec2:CreateNetworkInterface",
									"ec2:CreateNetworkInterfacePermission",
									"ec2:DeleteNetworkInterface",
									"ec2:DeleteNetworkInterfacePermission",
									"ec2:DescribeDhcpOptions",
									"ec2:DescribeNetworkInterfaces",
									"ec2:DescribeRouteTables",
									"ec2:DescribeSecurityGroups",
									"ec2:DescribeSubnets",
									"ec2:DescribeVpcEndpoints",
									"ec2:DescribeVpcs",
									"ecr:BatchCheckLayerAvailability",
									"ecr:BatchGetImage",
									"ecr:CreateRepository",
									"ecr:GetAuthorizationToken",
									"ecr:GetDownloadUrlForLayer",
									"ecr:Describe*",
									"elastic-inference:Connect",
									"iam:ListRoles",
									"kms:DescribeKey",
									"kms:ListAliases",
									"lambda:ListFunctions",
									"logs:CreateLogGroup",
									"logs:CreateLogStream",
									"logs:DescribeLogStreams",
									"logs:GetLogEvents",
									"logs:PutLogEvents",
									"sns:ListTopics",
									"s3:CreateBucket",
									"s3:GetBucketLocation",
									"s3:List*"
								],
								"Resource": "*"
							},
							{
								"Effect": "Allow",
								"Action": "sagemaker:InvokeEndpoint",
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"aws:PrincipalTag/ProjectID": {
											"Ref": "ProjectID"
										}
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": [
									"sagemaker:CreateTrainingJob",
									"sagemaker:CreateEndpoint",
									"sagemaker:CreateModel",
									"sagemaker:CreateEndpointConfig",
									"sagemaker:CreateHyperParameterTuningJob",
									"sagemaker:CreateTransformJob"
								],
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"aws:PrincipalTag/ProjectID": {
											"Ref": "ProjectID"
										}
									},
									"ForAllValues:StringEquals": {
										"aws:TagKeys": [
											"Username"
										]
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": [
									"sagemaker:DescribeTrainingJob",
									"sagemaker:DescribeEndpoint",
									"sagemaker:DescribeEndpointConfig"
								],
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"aws:PrincipalTag/ProjectID": {
											"Ref": "ProjectID"
										}
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": [
									"sagemaker:DeleteTags",
									"sagemaker:ListTags",
									"sagemaker:DescribeNotebookInstance",
									"sagemaker:ListNotebookInstanceLifecycleConfigs",
									"sagemaker:DescribeModel",
									"sagemaker:ListTrainingJobs",
									"sagemaker:DescribeHyperParameterTuningJob",
									"sagemaker:UpdateEndpointWeightsAndCapacities",
									"sagemaker:ListHyperParameterTuningJobs",
									"sagemaker:ListEndpointConfigs",
									"sagemaker:DescribeNotebookInstanceLifecycleConfig",
									"sagemaker:ListTrainingJobsForHyperParameterTuningJob",
									"sagemaker:StopHyperParameterTuningJob",
									"sagemaker:DescribeEndpointConfig",
									"sagemaker:ListModels",
									"sagemaker:AddTags",
									"sagemaker:ListNotebookInstances",
									"sagemaker:StopTrainingJob",
									"sagemaker:ListEndpoints",
									"sagemaker:DeleteEndpoint"
								],
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"aws:PrincipalTag/ProjectID": {
											"Ref": "ProjectID"
										}
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": [
									"ecr:SetRepositoryPolicy",
									"ecr:CompleteLayerUpload",
									"ecr:BatchDeleteImage",
									"ecr:UploadLayerPart",
									"ecr:DeleteRepositoryPolicy",
									"ecr:InitiateLayerUpload",
									"ecr:DeleteRepository",
									"ecr:PutImage"
								],
								"Resource": "arn:aws:ecr:*:*:repository/*sagemaker*"
							},
							{
								"Effect": "Allow",
								"Action": [
									"s3:GetObject",
									"s3:PutObject",
									"s3:DeleteObject"
								],
								"Resource": [
									"arn:aws:s3:::sagemaker-encrypted",
									"arn:aws:s3:::sagemaker-encrypted/*"
								],
								"Condition": {
									"StringEquals": {
										"aws:PrincipalTag/ProjectID": {
											"Ref": "ProjectID"
										}
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": "iam:PassRole",
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"iam:PassedToService": "sagemaker.amazonaws.com"
									}
								}
							}
						]
					}
				}]
			}
		},
		"SagemakerS3Bucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {
					"Ref": "SageMakerS3Bucket"
				},
				"BucketEncryption": {
					"ServerSideEncryptionConfiguration": [{
						"ServerSideEncryptionByDefault": {
							"SSEAlgorithm": "AES256"
						}
					}]
				}
			}
		},
		"S3Policy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "SagemakerS3Bucket"
				},
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
							"Sid": "AllowPolicy",
							"Effect": "Allow",
							"Principal": {
								"AWS": [{
										"Fn::Join": ["", ["arn:aws:iam::", {
											"Ref": "AWS::AccountId"
										}, ":role/", {
											"Ref": "SageMakerExecutionRole"
										}]]
									},
									{
										"Fn::Join": ["", ["arn:aws:iam::", {
											"Ref": "AWS::AccountId"
										}, ":user/", {
											"Ref": "UserName"
										}]]
									},
									{
										"Fn::Join": ["", ["arn:aws:iam::", {
											"Ref": "AWS::AccountId"
										}, ":root"]]
									}
								]
							},
							"Action": [
								"s3:Get*",
								"s3:Put*",
								"s3:List*",
								"s3:Delete*"
							],
							"Resource": [{
									"Fn::Join": ["", ["arn:aws:s3:::", {
										"Ref": "SagemakerS3Bucket"
									}]]
								},
								{
									"Fn::Join": ["", ["arn:aws:s3:::", {
										"Ref": "SagemakerS3Bucket"
									}, "/*"]]
								}
							]
						},
						{
							"Sid": "DenyPolicy",
							"Effect": "Deny",
							"NotPrincipal": {
								"AWS": [{
										"Fn::Join": ["", ["arn:aws:iam::", {
											"Ref": "AWS::AccountId"
										}, ":role/", {
											"Ref": "SageMakerExecutionRole"
										}]]
									},
									{
										"Fn::Join": ["", ["arn:aws:iam::", {
											"Ref": "AWS::AccountId"
										}, ":user/", {
											"Ref": "UserName"
										}]]
									},
									{
										"Fn::Join": ["", ["arn:aws:iam::", {
											"Ref": "AWS::AccountId"
										}, ":root"]]
									}
								]
							},
							"Action": [
								"s3:Get*",
								"s3:Put*",
								"s3:List*",
								"s3:Delete*"
							],
							"Resource": [{
									"Fn::Join": ["", ["arn:aws:s3:::", {
										"Ref": "SagemakerS3Bucket"
									}]]
								},
								{
									"Fn::Join": ["", ["arn:aws:s3:::", {
										"Ref": "SagemakerS3Bucket"
									}, "/*"]]
								}
							]
						}
					]
				}
			}
		},
		"SageMakerCustomResource": {
			"Type": "Custom::SageMakerCustomResource",
			"DependsOn" : "S3Policy",
			"Properties": {
				"ServiceToken": {"Fn::Join": ["", ["arn:aws:lambda:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":function:SageMaker_Build"]]},
				"NotebookInstanceName": {
					"Ref": "NotebookInstanceName"
				},
				"NotebookInstanceType": {
					"Ref": "NotebookInstanceType"
				},
				"KmsKeyId": {
					"Ref": "KMSKeyId"
				},
				"ProjectName": {
					"Ref": "ProjectName"
				},
				"RootAccess": {
					"Ref": "RootAccess"
				},
				"VolumeSizeInGB": {
					"Ref": "VolumeSizeInGB"
				},
				"LifecycleConfigName": {
					"Fn::If" : [
						"EFSCondition",
						 {"Fn::Join": ["", [ { "Ref" : "ProjectName" }, "-EFS-LC"]]},
						 {"Ref": "AWS::NoValue"}
					 ]
				},
				"DirectInternetAccess": {
					"Ref": "DirectInternetAccess"
				},
				"Tags": [{
					"Key": "ProjectID",
					"Value": {
						"Ref": "ProjectID"
					}
				}],
				"RoleArn": {
					"Fn::GetAtt": [
						"SageMakerExecutionRole",
						"Arn"
					]
				},
				"UserName": {
					"Ref": "UserName"
				}
			}
		},
		"UserGroup": {
			"Type": "AWS::IAM::Group",
			"Properties": {
				"GroupName": {
					"Fn::Join": [
						"-", [{
								"Ref": "NotebookInstanceName"
							},
							"SageMakerGroup"
						]
					]
				}
			}
		},
		"User": {
			"Type": "AWS::IAM::User",
			"Properties": {
				"Path": "/",
				"LoginProfile": {
					"Password": "Password@123",
					"PasswordResetRequired": "True"
				},
				"UserName": {
					"Ref": "UserName"
				},
				"Groups": [{
					"Ref": "UserGroup"
				}]
			}
		},
		"UserRolePolicies": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": {
					"Fn::Join": [
						"-", [{
								"Ref": "NotebookInstanceName"
							},
							"SageMakerUserRolePolicy"
						]
					]
				},
				"Groups": [{
					"Ref": "UserGroup"
				}],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
							"Action": [
								"sagemaker:List*",
								"ec2:DescribeVpcs",
								"ec2:DescribeSubnets",
								"ec2:DescribeSecurityGroups",
								"ec2:DescribeNetworkInterfaces",
								"kms:DescribeKey",
								"kms:ListAliases",
								"kms:Create*",
								"aws-marketplace:ViewSubscriptions",
								"iam:ListRoles",
								"ecr:Describe*",
								"cloudwatch:Describe*",
								"cloudwatch:Get*",
								"cloudwatch:List*",
								"logs:Describe*",
								"logs:Get*"
							],
							"Resource": "*",
							"Effect": "Allow",
							"Sid": "CommonAccess"
						},
						{
							"Condition": {
								"StringEquals": {
									"sagemaker:ResourceTag/ProjectID": {
										"Ref": "ProjectID"
									}
								}
							},
							"Action": [
								"s3:*"
							],
							"Resource": [{
									"Fn::Join": ["", ["arn:aws:s3:::", {
										"Ref": "SagemakerS3Bucket"
									}]]
								},
								{
									"Fn::Join": ["", ["arn:aws:s3:::", {
										"Ref": "SagemakerS3Bucket"
									}, "/*"]]
								}
							],
							"Effect": "Allow",
							"Sid": "S3Access"
						},
						{
							"Condition": {
								"StringEquals": {
									"sagemaker:ResourceTag/ProjectID": {
										"Ref": "ProjectID"
									}
								}
							},
							"Action": [
								"sagemaker:StartNotebookInstance",
								"sagemaker:StopNotebookInstance",
								"sagemaker:CreatePresignedNotebookInstanceUrl",
								"sagemaker:Describe*"
							],
							"Resource": "*",
							"Effect": "Allow",
							"Sid": "DeveloperAccess"
						},
						{
							"Condition": {
								"StringEquals": {
									"iam:PassedToService": "sagemaker.amazonaws.com"
								}
							},
							"Action": [
								"iam:PassRole"
							],
							"Resource": "*",
							"Effect": "Allow",
							"Sid": "PassRoleForExecutionRoles"
						}
					]
				}
			}
		}
	},
	"Outputs": {
		"Message": {
			"Description": "Execution Status",
			"Value": {
				"Fn::GetAtt": [
					"SageMakerCustomResource",
					"Message"
				]
			}
		},
		"ExecutionRoleArn": {
			"Description": "ARN of the Sagemaker Execution Role",
			"Value": {
				"Fn::GetAtt": ["SageMakerExecutionRole", "Arn"]
			}
		},
		"S3BucketName": {
			"Description": "Name of the S3 bucket created",
			"Value": {
				"Ref": "SagemakerS3Bucket"
			}
		},
		"NotebookInstanceName": {
			"Description": "Name of the Sagemaker Notebook instance created",
			"Value": {
				"Ref": "NotebookInstanceName"
			}
		},
		"ProjectID": {
			"Description": "Project ID used for SageMaker demonstration",
			"Value": {
				"Ref": "ProjectID"
			}
		},
		"UserName": {
			"Description": "Name of the user",
			"Value": {
				"Ref": "UserName"
			}
		}
	}
}
