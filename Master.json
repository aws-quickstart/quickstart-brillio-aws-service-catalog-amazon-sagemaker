{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Master stack which creates all required nested stacks",
    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
          "ParameterGroups" : [
            {
              "Label" : { "default" : "Environment Details" },
              "Parameters" : [ "ProjectName" ]
            },
            {
                "Label" : { "default" : "VPC Network Details" },
                "Parameters" : [ "VPCCIDR","Subnet1CidrBlock","Subnet2CidrBlock"]
            },
            {
                "Label" : { "default" : "ECR Repository Details" },
                "Parameters" : [ "ECRRepositoryName"]
            },
            {
                "Label" : { "default" : "Bucket Details" },
                "Parameters" : [ "SourceBucket"]
            },
            {
                "Label" : { "default" : "Access to Service Catalog" },
                "Parameters" : [ "AdminGroupName", "UserGroupName"]
            }
          ],
          "ParameterLabels" : {
            "VPCCIDR" : { "default" : "VPC CIDR block" },
            "Subnet1CidrBlock" : { "default" : "Resource Subnet CIDR block" },
            "Subnet2CidrBlock": { "default" : "ENI Subnet CIDR block" },
            "ECRRepositoryName": { "default" : "ECR Repository Name" },
            "SourceBucket": { "default" : "Source Bucket Name" },
			"AdminGroupName" : { "default" : "Admin Group Name" },
            "UserGroupName": { "default" : "User Group Name" },
			"ProjectName": { "default" : "Environment Name" }
          }
        }
    },
    "Parameters": {
        "ProjectName": {
            "Description": "Infrastructure naming convention for SageMakerGuardrail solution",
            "Type": "String",
            "Default": "QuickStart"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "ECRRepositoryName": {
            "Description": "ECR Repository Name",
            "Type": "String",
            "Default": "sagemaker_repository"
        },
        "Subnet1CidrBlock": {
            "Description": "CIDR for the Subnet-1",
            "Type": "String",
            "Default": "10.0.1.0/24"
        },
        "Subnet2CidrBlock": {
            "Description": "CIDR for the Subnet-2",
            "Type": "String",
            "Default": "10.0.2.0/24"
        },
        "SourceBucket": {
            "Description": "S3 Bucket Name where All cloudformation templates are stored",
            "Type": "String",
			"Default": "code-repository-california"
        },
		"AdminGroupName": {
            "Description": "Admin group Name",
            "Type": "String",
            "Default": "AdminGroup"
        },
		"UserGroupName": {
            "Description": "User group name who will access Service Catalog",
            "Type": "String",
            "Default": "SCUsers"
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/VPCStack.json"]]
                },
                "TimeoutInMinutes": "5",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "Subnet1CidrBlock": {
                        "Ref": "Subnet1CidrBlock"
                    },
                    "Subnet2CidrBlock": {
                        "Ref": "Subnet2CidrBlock"
                    }
                }
            }
        },
        "EFSStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/EFSStack.json"]]
                },
                "TimeoutInMinutes": "15",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
					"SecurityGroup1Id": {


                        "Fn::GetAtt": ["VPCStack", "Outputs.SecurityGroup1Id"]
                    },
                    "SecurityGroup2Id": {


                        "Fn::GetAtt": ["VPCStack", "Outputs.SecurityGroup2Id"]
                    },
                    "Subnet1Id": {

                        "Fn::GetAtt": ["VPCStack", "Outputs.Subnet1Id"]
                    }

                }

            }

        },
        "VPCEndPointsStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/VPCEndpointsStack.json"]]
                },
                "TimeoutInMinutes": "15",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "VPCId": {
                        "Fn::GetAtt": ["VPCStack", "Outputs.VPCId"]
                    },
                    "Subnet2Id": {
                        "Fn::GetAtt": ["VPCStack", "Outputs.Subnet2Id"]
                    },
                    "RouteTableId": {
                        "Fn::GetAtt": ["VPCStack", "Outputs.RouteTableId"]
                    },
                    "SecurityGroup1Id": {
                        "Fn::GetAtt": ["VPCStack", "Outputs.SecurityGroup1Id"]
                    },
					"SecurityGroup2Id": {
                        "Fn::GetAtt": ["VPCStack", "Outputs.SecurityGroup2Id"]
                    }
                }

            }

        },
        "ECRStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/ECRStack.json"]]
                },
                "TimeoutInMinutes": "15",
                "Parameters": {
                    "ProjectName": {

                        "Ref": "ProjectName"

                    },
                    "ECRRepositoryName": {
                        "Ref": "ECRRepositoryName"
                    },
                    "ECREndpoint": {
                        "Fn::GetAtt": ["VPCEndPointsStack", "Outputs.ECREndpoint"]
                    }
                }
            }
        },
        "LifecycleConfigStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/SageMakerLaunchConfigStack.json"]]
                },
                "TimeoutInMinutes": "15",
                "Parameters": {
					"ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "EFSMountIpAddr": {
                        "Fn::GetAtt": ["EFSStack", "Outputs.EFSMountIpAddr"]
                    }
                }

            }
        },
		"LambdaFunctionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/LambdaStack.json"]]
                },
                "TimeoutInMinutes": "15",
                "Parameters": {
					"ProjectName": {
                        "Ref": "ProjectName"
                    },
					"SourceBucket": {
                        "Ref": "SourceBucket"
                    }
                }

            }
        },
		"NotebookSCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": ["", ["https://s3.amazonaws.com/", {
                        "Ref": "SourceBucket"
                    }, "/ServiceCatalogStack.json"]]
                },
                "TimeoutInMinutes": "15",
                "Parameters": {
					"ProjectName": {
                        "Ref": "ProjectName"
                    },
					"SourceBucket": {
                        "Ref": "SourceBucket"
                    },
					"AdminGroupName": {
                        "Ref": "AdminGroupName"
                    },
					"UserGroupName": {
                        "Ref": "UserGroupName"
                    }
                }

            }
        }
    },
    "Outputs": {
        "VPCStackOutPut": {
            "Value": {
                "Ref": "VPCStack"
            }

        },
        "EFSStackOutPut": {
            "Value": {
                "Ref": "EFSStack"
            }
        },
        "VPCEndPointsStackOutput": {
            "Value": {
                "Ref": "VPCEndPointsStack"
            }
        },
        "ECRStackOutput": {
            "Value": {
                "Ref": "ECRStack"
            }
        },
        "NbInstanceLifecycleConfigStackOutput": {
            "Value": {
                "Ref": "LifecycleConfigStack"
            }
        },
		"LambdaFunctionStackOutput": {
            "Value": {
                "Ref": "LambdaFunctionStack"
            }
        },
        "NotebookSCStackOutput": {
            "Value": {
                "Ref": "NotebookSCStack"
            }
        }
    }
}